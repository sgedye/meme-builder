{"version":3,"sources":["Components/Instructions.js","Components/Image.js","Components/Gallery.js","Components/EntryInput.js","Components/Overlay.js","Components/App.js","serviceWorker.js","index.js"],"names":["Container","styled","aside","OrderedList","ol","Instructions","style","fontSize","StyledImage","img","Image","props","id","src","alt","onClick","main","Title","h1","Pictures","div","Canvas","canvas","Button","button","Gallery","IMAGE_LIST","map","imgId","altTag","replace","_","$1","key","imageClicked","width","height","console","log","document","getElementById","textContent","display","Adjustments","EntryInput","className","htmlFor","inputId","children","type","placeholder","onChange","e","handleTextInput","outputId","target","value","handleFontSize","handleRotation","handleCapitalise","checked","Modal","setAppElement","Overlay","useState","rotateTop","setRotateTop","rotateBottom","setRotateBottom","textInput","element","changeCase","textToAdjust","toUpperCase","toLowerCase","adjustLine","preventDefault","adjustor","parentElement","styleFont","parseFloat","window","getComputedStyle","getPropertyValue","adjustFontSize","prevState","transform","adjustRotation","drawText","ctx","textId","rotation","Number","font","fillStyle","shadowColor","shadowBlur","translate","rotate","Math","PI","textAlign","content","fillText","isOpen","isModalOpen","onRequestClose","setIsModalOpen","overlay","backgroundColor","memeUrl","getContext","drawImage","createCanvas","App","setMemeUrl","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.761fc6cc.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.aside`\n  position: fixed;\n  display: inline-block;\n  width: 100vw;\n  height: auto;\n  background-color: green;\n  text-align: center;\n  overflow-wrap: break-word;\n  hr {\n    border: 2px solid lightgreen;\n    border-radius: 25px;\n    margin: 10px auto;\n  }\n  p {\n    font-size: 1.4em;\n  }\n\n  @media screen and (min-width: 600px) {\n    width: 30vw;\n    height: 100vh;\n  }\n`\n\nconst OrderedList = styled.ol`\n  list-style: none;\n  counter-reset: count;\n  font-size: 1.4em;\n  padding: 0 0 0 10%;\n  text-align: left;\n  line-height: 2em;\n  li {\n    margin: 20px;\n    counter-increment: count;\n  }\n  li::before {\n    content: counter(count) \". \";\n    position: absolute;\n    left: 25px;\n    transform: rotate(-5deg);\n    background-color: black;\n    color: gold;\n    padding: 5px;\n    border-radius: 50%;\n    box-shadow: 1px 2px 5px gold;\n    font-weight: bold;\n  }\n`\n\nfunction Instructions() {\n  return (\n    <Container>\n      <h2 style={{ fontSize: \"2.2em\" }}>Build Your Own Meme</h2>\n      <hr />\n      <p>Create your own meme by following these easy steps.</p>\n      <OrderedList>\n        <li>Click on an image</li>\n        <li>Write your text</li>\n        <li>Adjust the settings</li>\n        <li>Click download</li>\n        <li>Right click on your meme</li>\n        <li>Select \"Save Image As...\"</li>\n        <li>Click \"Return to Gallery\" to create another meme</li>\n      </OrderedList>\n    </Container>\n  )\n}\n\nexport default Instructions\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledImage = styled.img`\n  width: 200px;\n  height: 200px;\n  margin: 10px;\n`\n\nexport default function Image(props) {\n  return (\n    <div>\n      <StyledImage id={props.id} src={props.src} alt={props.alt} onClick={props.onClick} />\n    </div>\n  )\n}","import React from 'react'\nimport styled from 'styled-components'\n\nimport Image from './Image'\n\nconst Container = styled.main`\n  display: inline-block;\n  width: 100vw;\n  height: auto;\n  margin: 0 auto;\n  @media screen and (min-width: 600px) {\n    width: 70vw;\n    margin-left: 30vw;\n  }\n`\nconst Title = styled.h1`\n  margin: 20px 0;\n  width: 100%;\n  text-align: center;\n  font-size: 3em;\n  text-shadow: -1px -1px floralwhite, 3px 5px 5px floralwhite;\n`\nconst Pictures = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n`\n\nconst Canvas = styled.canvas`\n  display: none;\n  margin: 20px auto;\n`\n\nconst Button = styled.button`\n  display: none;\n  margin: 0 auto;\n`\n\nfunction Gallery(props) {\n  \n  const returnToGallery = () => {\n    console.log(document.getElementById('memeToDownload'))\n    document.getElementById(\"gallery-title\").textContent = \"Image Gallery\"\n    document.getElementById(\"gallery-body\").style.display = \"flex\"\n    document.getElementById(\"return-to-gallery\").style.display = \"none\"\n    document.getElementById(\"memeToDownload\").style.display = \"none\"\n  }\n\n  const imageData = [\n    { id:1, src:'http://rtgphotography.com.au/img/galleries/cuba.jpg' },\n    { id:2, src:'http://rtgphotography.com.au/img/galleries/ethiopia.jpg' },\n    { id:3, src:'http://rtgphotography.com.au/img/galleries/madagascar.jpg' },\n    { id:4, src:'http://rtgphotography.com.au/img/galleries/landscapes.jpg' },\n    { id:5, src:'http://rtgphotography.com.au/img/galleries/portraits-1.jpg' },\n    { id:6, src:'http://rtgphotography.com.au/img/galleries/portraits-2.jpg' },\n    { id:7, src:'http://rtgphotography.com.au/img/galleries/black&whites.jpg' }\n  ]\n\n  const IMAGE_LIST = imageData.map(img => {\n    const imgId = 'img_' + img.id\n    const altTag = img.src.replace(/.*\\/(\\w+[-|&]?\\w+)\\.jpg/, (_, $1) => $1)\n    return (\n      <Image key={imgId} id={imgId} src={img.src} alt={altTag} onClick={() => props.imageClicked(img.src)} />\n    )\n  })\n  return (\n    <Container id=\"gallery\">\n      <Title id=\"gallery-title\">Image Gallery</Title>\n      <Pictures id=\"gallery-body\">{IMAGE_LIST}</Pictures>\n      <Canvas id=\"memeToDownload\" width=\"600\" height=\"400\"></Canvas>\n      <Button id=\"return-to-gallery\" onClick={returnToGallery}>Return to Gallery</Button>\n    </Container>\n  )\n}\n\nexport default Gallery\n\n\n\n// import { createClient } from 'pexels';\n\n// All requests made with the client will be authenticated\n\n\n  // UNSECURE API call to get images \n  /* \n  const client = createClient(process.env.REACT_APP_PEXELS_API_KEY);\n  console.log(client)\n\n  console.log(process.env.REACT_APP_PEXELS_API_KEY)\n  client.photos.show({ id: 2014422 })\n    .then(photo => { console.log(photo) })\n  \n  \n  let x =client.photos.random()\n  const getX = () => console.log(x)\n  setInterval(() => {\n    getX()\n  }, 1000);\n  const query = 'Nature';\n  client.photos.search({ query, per_page: 1 })\n    .then(photos => { console.log(photos)});\n  */","import React from 'react'\nimport styled from \"styled-components\"\nimport { TiPlus, TiMinus } from \"react-icons/ti\"\nimport { GiAnticlockwiseRotation, GiClockwiseRotation } from \"react-icons/gi\"\n\nconst Adjustments = styled.div`\n  display: inline-block;\n  button {\n    display: inline-block;\n    align-items: center;\n  }\n  button:first-of-type {\n    margin-right: 10px;\n  }\n  p {\n    display: none;\n    padding: 0 10px;\n  }\n  @media screen and (min-width: 600px) {\n    button:first-of-type { margin-right: 0; }\n    p { display: inline-block; }\n  }\n`\n\nfunction EntryInput(props) {  \n  return (\n    <div className=\"entryGrid\">\n      <label htmlFor={props.inputId}>{props.children}</label>\n      <input\n        type=\"text\"\n        id={props.inputId}\n        placeholder=\"Add text to the top\"\n        onChange={(e) => props.handleTextInput(props.outputId, e.target)}\n      />\n      <Adjustments id=\"font-sizing\">\n        <button\n          value=\"font++\"\n          onClick={(e) => props.handleFontSize(props.outputId, e)}\n        >\n          <TiPlus />\n        </button>\n        <p>Font Size</p>\n        <button\n          value=\"font--\"\n          onClick={(e) => props.handleFontSize(props.outputId, e)}\n        >\n          <TiMinus />\n        </button>\n      </Adjustments>\n      <Adjustments id=\"rotation\">\n        <button\n          value=\"rRight\"\n          onClick={(e) => props.handleRotation(props.outputId, e)}\n        >\n          <GiAnticlockwiseRotation />\n        </button>\n        <p>Rotate</p>\n        <button\n          value=\"rLeft\"\n          onClick={(e) => props.handleRotation(props.outputId, e)}\n        >\n          <GiClockwiseRotation />\n        </button>\n      </Adjustments>\n      <Adjustments className=\"checkbox\">\n        <label htmlFor={`${props.inputId}-check`}>SHOUT</label>\n        <input\n          id={`${props.inputId}-check`}\n          type=\"checkbox\"\n          onClick={(e) =>\n            props.handleCapitalise(props.outputId, e.target.checked)\n          }\n        />\n      </Adjustments>\n    </div>\n  )\n}\n\nexport default EntryInput\n","import React, { useState } from \"react\"\nimport Modal from \"react-modal\"\nimport { IoMdCloseCircle } from \"react-icons/io\"\n\nimport EntryInput from \"./EntryInput\"\n\nModal.setAppElement(\"#root\")\n\nfunction Overlay(props) {\n\n  const [rotateTop, setRotateTop] = useState(0)\n  const [rotateBottom, setRotateBottom] = useState(0)\n  // const [offsetX, setOffsetX] = useState(0)\n  // const [offsetY, setOffsetY] = useState(0)\n\n\n  const textInput = (element, target) => {\n    document.getElementById(element).textContent = target.value\n    const checkBox = document.getElementById(target.id + \"-check\")\n    checkBox.checked = false\n  }\n\n  const adjustFontSize = (textToAdjust, adjustor) => {\n    let styleFont = parseFloat(\n      window.getComputedStyle(textToAdjust, null).getPropertyValue(\"font-size\")\n    )\n    styleFont += adjustor === \"font++\" ? 2 : -2\n    textToAdjust.style.fontSize = `${styleFont}px`\n  }\n\n  const adjustRotation = (textToAdjust, adjustor) => {\n    if (textToAdjust.id === \"meme-text-top\") {\n      adjustor === \"rLeft\"\n        ? setRotateTop((prevState) => prevState + 10)\n        : setRotateTop((prevState) => prevState - 10)\n      textToAdjust.style.transform = `rotate(${rotateTop}deg)`\n    } else {\n      adjustor === \"rLeft\"\n        ? setRotateBottom((prevState) => prevState + 10)\n        : setRotateBottom((prevState) => prevState - 10)\n      textToAdjust.style.transform = `rotate(${rotateBottom}deg)`\n    }\n  }\n\n  const changeCase = (element, checked) => {\n    const textToAdjust = document.getElementById(element)\n    textToAdjust.textContent = checked \n      ? textToAdjust.textContent.toUpperCase()\n      : textToAdjust.textContent.toLowerCase()\n  }\n\n  const adjustLine = (element, e) => {\n    e.preventDefault()\n    const adjustor =\n      e.target.value ||\n      e.target.parentElement.value ||\n      e.target.parentElement.parentElement.value\n    const textToAdjust = document.getElementById(element)\n    if (adjustor === 'font++' || adjustor === 'font--') {\n      adjustFontSize(textToAdjust, adjustor)\n    } else if (adjustor === 'rLeft' || adjustor === 'rRight') {\n      adjustRotation(textToAdjust, adjustor)\n    }\n  }\n  \n  function drawText(canvas, ctx, textId) {\n    const element = document.getElementById(textId)\n    const fontSize = parseFloat(\n      window.getComputedStyle(element, null).getPropertyValue(\"font-size\")\n    )\n    const rotation = Number(element.style.transform.replace(/[^-0-9]/g, \"\"))\n    ctx.font = `${fontSize}px Impact`\n    ctx.fillStyle = \"white\"\n    ctx.shadowColor = \"black\"\n    ctx.shadowBlur = 6\n    ctx.translate(canvas.width / 2, canvas.height / 2)\n    ctx.rotate((rotation * Math.PI) / 180)\n    ctx.translate(-canvas.width / 2, -canvas.height / 2)\n    ctx.textAlign = \"center\"\n    \n    const checkBox = textId === \"meme-text-top\"\n      ? document.getElementById(`topLine-check`)\n      : document.getElementById(`bottomLine-check`) \n    const content = checkBox.checked\n      ? element.textContent.toUpperCase()\n      : element.textContent\n    textId === \"meme-text-top\"\n      ? ctx.fillText(content, canvas.width / 2, 100)\n      : ctx.fillText(content, canvas.width / 2, canvas.height - 100)\n  }\n\n  function createCanvas(e) {\n    e.preventDefault()\n    const canvas = document.getElementById('memeToDownload')\n    const ctx = canvas.getContext(\"2d\")\n    \n    const img = document.getElementById(\"meme-image\")\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height)\n    \n    drawText(canvas, ctx, \"meme-text-top\")\n    drawText(canvas, ctx, \"meme-text-bottom\")\n\n    document.getElementById(\"gallery-title\").textContent = \"Your Personal Meme\"\n    document.getElementById(\"gallery-body\").style.display = \"none\"\n    canvas.style.display = \"block\"\n    document.getElementById('return-to-gallery').style.display = \"block\"\n\n    props.setIsModalOpen(false)\n  }\n\n\n\n\n\n//   setTimeout(() => {\n//     dragElement();\n//   }, 2000);\n\n//   function dragElement() {\n//     var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n//     document.getElementById(\"meme-text-bottom\").onMouseDown = dragMouseDown;\n\n//     function dragMouseDown(e) {\n//       e = e || window.event;\n//       e.preventDefault();\n//       e.nativeEvent.srcElement.draggable = true\n//       // get the mouse cursor position at startup:\n//       pos3 = e.clientX;\n//       pos4 = e.clientY;\n//       document.onmouseup = closeDragElement;\n//       // call a function whenever the cursor moves:\n//       document.onmousemove = elementDrag;\n//     }\n\n//     function elementDrag(e) {\n//       e = e || window.event;\n//       e.preventDefault();\n//       // calculate the new cursor position:\n//       pos1 = pos3 - e.clientX;\n//       pos2 = pos4 - e.clientY;\n//       pos3 = e.clientX;\n//       pos4 = e.clientY;\n//       // set the element's new position:\n//       document.getElementById(\"meme-text-bottom\").style.top = (document.getElementById(\"meme-text-bottom\").offsetTop - pos2) + \"px\";\n//       document.getElementById('meme-text-bottom').style.left = (document.getElementById(\"meme-text-bottom\").offsetLeft - pos1) + \"px\";\n//     }\n\n//     function closeDragElement() {\n//       // stop moving when mouse button is released:\n//       document.onmouseup = null;\n//       document.onmousemove = null;\n//     }\n//   }\n\n\n\n\n\n\n\n//   // const xxx = document.querySelector('.meme-text')\n//   // xxx.onmousedown = //\n\n//   // const handleMouseEvents = () => {\n\n//   // }\n\n//   // const handleMouseDown = (e) => {\n//   //   console.log(e, e.value)\n//   // }\n// // onMouseDown = { event => this.handleMouseDown(event, ‘top’) }\n//   // onMouseUp = { event => this.handleMouseUp(event, ‘top’) }\n\n//   const mouseDown = e => {\n//     e.preventDefault()\n//     console.log(e.target, e.nativeEvent)\n//     // const selectedText = e.target\n//     // setTimeout(() => {\n//     //   selectedText.style.display = \"none\"\n//     // }, 1110)\n//   }\n\n//   const mouseMove = e => {\n//     const {target, clientWidth, clientHeight} = document.getElementById('meme-image')\n//     setOffsetX(Math.floor((e.nativeEvent.offsetX / clientWidth) * 100))\n//     setOffsetY(Math.floor((e.nativeEvent.offsetY / clientHeight) * 100))\n//     console.log(document.getElementById('meme-image'), document.getElementById('meme-image').clientHeight)\n\n//     console.log(document.getElementById('meme-image').nextSibling)\n\n\n//     console.log(offsetX, offsetY)\n//     console.log(clientWidth, clientHeight)\n//       // console.log(e.nativeEvent.srcElement)\n//       // // e.nativeEvent.target = document.getElementById('meme-image')\n//       // console.log(e.nativeEvent.target)\n//       e.nativeEvent.srcElement.draggable = true\n//       // console.log(e.nativeEvent)\n//       // console.log(e.nativeEvent.target)\n//       // console.log(e.nativeEvent.srcElement.draggable)\n//   }\n\n//   const mouseUp = e => {\n//     e.preventDefault()\n//     console.log(offsetX, offsetY)\n//   }\n\n  return (\n    <Modal\n      className=\"modal\"\n      isOpen={props.isModalOpen}\n      onRequestClose={() => props.setIsModalOpen(false)}\n      style={{\n        overlay: { backgroundColor: \"grey\" },\n        // content: { color: \"purple\" },\n      }}\n    >\n      <h1 id=\"create-meme\">Create a Meme</h1>\n      <form className=\"modal-form\">\n        <EntryInput\n          inputId=\"topLine\"\n          outputId=\"meme-text-top\"\n          handleTextInput={textInput}\n          handleFontSize={adjustLine}\n          handleRotation={adjustLine}\n          handleCapitalise={changeCase}\n        >\n          Top Line\n        </EntryInput>\n      </form>\n      <div className=\"meme-image-div\">\n        <img id=\"meme-image\" src={props.memeUrl} alt=\"meme to create\" />\n        <p\n          id=\"meme-text-top\"\n          className=\"meme-text\" /*onMouseDown={mouseDown} onMouseUp={mouseUp} onMouseMove={mouseMove}*/\n        ></p>\n        <p\n          id=\"meme-text-bottom\"\n          className=\"meme-text\" /*onMouseDown={mouseDown} onMouseUp={mouseUp} onMouseMove={mouseMove}*/\n        ></p>\n      </div>\n      <form className=\"modal-form\">\n        <EntryInput\n          inputId=\"bottomLine\"\n          outputId=\"meme-text-bottom\"\n          handleTextInput={textInput}\n          handleFontSize={adjustLine}\n          handleRotation={adjustLine}\n          handleCapitalise={changeCase}\n        >\n          Bottom Line\n        </EntryInput>\n      </form>\n      <button className=\"modal-download\" onClick={(e) => createCanvas(e)}>\n        download\n      </button>\n      <IoMdCloseCircle\n        className=\"modal-close\"\n        onClick={() => props.setIsModalOpen(false)}\n      />\n    </Modal>\n  )\n}\n\nexport default Overlay\n\n\n","import React, { useState } from \"react\"\nimport Instructions from './Instructions'\nimport Gallery from './Gallery'\nimport Overlay from './Overlay'\n\nfunction App() {\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [memeUrl, setMemeUrl] = useState(\"\")\n\n  const imageClicked = (id) => {\n    setMemeUrl(id)\n    setIsModalOpen(true)\n  }\n\n  return (\n    <div id=\"app\">\n      <Instructions />\n      <Gallery imageClicked={imageClicked} />\n      <Overlay\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        memeUrl={memeUrl}\n      />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}